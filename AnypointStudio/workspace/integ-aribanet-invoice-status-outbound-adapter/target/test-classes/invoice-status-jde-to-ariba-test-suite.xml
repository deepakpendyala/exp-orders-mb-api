<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:invoice-status-jde-to-ariba.xml"/>
        <spring:import resource="classpath:global-config.xml"/>
    </spring:beans>
    <munit:test name="invoice-status-jde-to-ariba-test-suite-invoice-status-jde-to-aribaFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock Ariba">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Ariba_HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('ariba_cxml_response.xml').asString()]">
                <mock:inbound-properties>
                    <mock:inbound-property key="http.status" value="200"/>
                </mock:inbound-properties>
            </mock:then-return>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock JDE">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['JDE_UPDATE']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['OK']">
                <mock:inbound-properties>
                    <mock:inbound-property key="http.status" value="200"/>
                </mock:inbound-properties>
            </mock:then-return>
        </mock:when>
        <munit:set payload="#[getResource('metadata/sample-jde-event.xml').asString()]" doc:name="Set Message"/>
        <flow-ref name="invoice-status-jde-to-aribaFlow" doc:name="invoice-status-jde-to-aribaFlow"/>
        <munit:assert-payload-equals expectedValue="#['OK']" doc:name="Assert Payload"/>
        <mock:verify-call messageProcessor=".*:.*" times="1" doc:name="Verify Call is made to Ariba">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Ariba_HTTP']"/>
            </mock:with-attributes>
        </mock:verify-call>
        <mock:verify-call messageProcessor=".*:.*" times="1" doc:name="Verify Call is made to JDE to Update Ariba Response">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['JDE_UPDATE']"/>
            </mock:with-attributes>
        </mock:verify-call>
    </munit:test>
</mule>
